# phpunit
# Autogenerated from man page /usr/share/man/man1/phpunit.1.gz
# using Deroffing man parser
complete -c phpunit -l log-junit --description 'Log test execution in JUnit XML format to file.'
complete -c phpunit -l log-tap --description 'Log test execution in TAP format to file.'
complete -c phpunit -l log-json --description 'Log test execution in JSON format.'
complete -c phpunit -l coverage-clover --description 'Generate code coverage report in Clover XML format.'
complete -c phpunit -l coverage-html --description 'Generate code coverage report in HTML format.'
complete -c phpunit -l coverage-php --description 'Serialize PHP_CodeCoverage object to file.'
complete -c phpunit -l coverage-text --description 'Generate code coverage report in text format.'
complete -c phpunit -l testdox-html --description 'Write agile documentation in HTML format to file.'
complete -c phpunit -l testdox-text --description 'Write agile documentation in Text format to file.'
complete -c phpunit -l filter --description 'Filter which tests to run.'
complete -c phpunit -l testsuite --description 'Filter which testsuite to run.'
complete -c phpunit -l group --description 'Only runs tests from the specified group(s).'
complete -c phpunit -l exclude-group --description 'Exclude tests from the specified group(s).'
complete -c phpunit -l list-groups --description 'List available test groups.'
complete -c phpunit -l test-suffix --description 'Only search for test in files with specified suffix(es).'
complete -c phpunit -l loader --description 'TestSuiteLoader implementation to use.'
complete -c phpunit -l printer --description 'TestSuiteListener implementation to use.'
complete -c phpunit -l repeat --description 'Runs the test(s) repeatedly.'
complete -c phpunit -l tap --description 'Report test execution progress in TAP format.'
complete -c phpunit -l testdox --description 'Report test execution progress in TestDox format.'
complete -c phpunit -l colors --description 'Use colors in output.'
complete -c phpunit -l stderr --description 'Write to STDERR instead of STDOUT.'
complete -c phpunit -l stop-on-error --description 'Stop execution upon first error.'
complete -c phpunit -l stop-on-failure --description 'Stop execution upon first error or failure.'
complete -c phpunit -l stop-on-skipped --description 'Stop execution upon first skipped test.'
complete -c phpunit -l stop-on-incomplete --description 'Stop execution upon first incomplete test.'
complete -c phpunit -l strict --description 'Run tests in strict mode.'
complete -c phpunit -s v -l verbose --description 'Output more verbose information.'
complete -c phpunit -l debug --description 'Display debugging information during test execution.'
complete -c phpunit -l process-isolation --description 'Run each test in a separate PHP process.'
complete -c phpunit -l no-globals-backup --description 'Do not backup and restore $GLOBALS for each test.'
complete -c phpunit -l static-backup --description 'Backup and restore static attributes for each test.'
complete -c phpunit -l bootstrap --description 'A "bootstrap" PHP file that is run before the tests.'
complete -c phpunit -l no-configuration --description 'Ignore default configuration file (phpunit. xml).'
complete -c phpunit -l include-path --description 'Prepend PHP\'s include_path with given path(s).'
complete -c phpunit -s d --description 'Sets a php. ini value.'
complete -c phpunit -s h -l help --description 'Prints this usage information.'
complete -c phpunit -s c -l configuration --description '.'
complete -c phpunit -l version --description 'Prints the version and exits.'

